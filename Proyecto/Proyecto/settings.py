"""
Django settings for Proyecto project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Definición de la ruta base del proyecto
BASE_DIR = Path(__file__).resolve().parent.parent

# Configuración de archivos media (subidos por usuarios)
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Directorio local para almacenar archivos
MEDIA_URL = '/media/'  # URL pública para acceder a los archivos cargados

# Configuración de archivos estáticos y plantillas
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')  # Directorio global de plantillas
STATIC_DIR = os.path.join(BASE_DIR, 'static')  # Directorio global de archivos estáticos

# Clave secreta para la seguridad
SECRET_KEY = 'django-insecure-cf!z)qo#_y62@wg1i^k$6_=ze8quicb+wc5nc=5(vau)y1yvx2'

# Modo de depuración (activar sólo en desarrollo)
DEBUG = True

ALLOWED_HOSTS = ["timeplay.duckdns.org", '127.0.0.1', 'localhost', '*']

CSRF_TRUSTED_ORIGINS = ['https://timeplay.duckdns.org']  # Añade el dominio aquí


# Definición de aplicaciones instaladas
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Aplicacion1',  # Tu aplicación personalizada
    'django_extensions',  # Extensiones de Django
    'rest_framework',
]

# Middleware para procesamiento de solicitudes/respuestas
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',  # Cambiar aquí según sea necesario
    ],
}

# Configuración de redirecciones de login
LOGIN_REDIRECT_URL = '/'  # Redirige a la página de inicio después de iniciar sesión
LOGOUT_REDIRECT_URL = '/'  # Redirige a la página de inicio después de cerrar sesión
LOGIN_URL = 'login'  # Nombre de tu vista de login o ruta

# URL raíz de las URLs del proyecto
ROOT_URLCONF = 'Proyecto.urls'

# Configuración de plantillas
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'Aplicacion1/templates'), TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Configuración WSGI
WSGI_APPLICATION = 'Proyecto.wsgi.application'

# Configuración de base de datos
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Validadores de contraseñas
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Configuración de internacionalización
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Europe/Madrid'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Configuración de archivos estáticos (CSS, JavaScript, imágenes)
STATIC_URL = '/static/'  # URL pública para acceder a los archivos estáticos

# Directorios donde Django buscará archivos estáticos
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'Aplicacion1', 'static'),  # Los directorios de las aplicaciones
]

# Directorio donde Django almacenará los archivos estáticos recopilados
STATIC_ROOT = os.path.join(BASE_DIR, 'static')  # Directorio para archivos estáticos compilados


# Tipo de campo de clave primaria por defecto
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
